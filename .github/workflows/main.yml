name: CircleSfera Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Run unit tests
      run: npm run test
      
    - name: Run integration tests
      run: npm run test:integration
      
    - name: Generate coverage report
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      
    - name: Build
      run: npm run build
      
    - name: Cache build
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-build-${{ hashFiles('**/*.ts') }}
        restore-keys: |
          ${{ runner.os }}-build-

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "circlesfera-api"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
      env:
        HD_PORT: 3001
        HD_ALLOWED_ORIGINS: "https://circlesfera.com,https://www.circlesfera.com,https://circlesfera.vercel.app"
